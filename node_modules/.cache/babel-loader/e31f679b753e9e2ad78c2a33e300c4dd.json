{"ast":null,"code":"import _slicedToArray from \"/Users/idastensrud/jsfw-ca/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/idastensrud/jsfw-ca/src/components/cards/list/CardList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport fetchMock from \"fetch-mock\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport mockCards from \"../../../constants/cards\";\nimport \"./CardList.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardItem from \"./CardItem\";\nexport default function CardList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  useEffect(() => {\n    fetchMock.mock(BASE_URL, {\n      cards: mockCards\n    });\n    fetch(BASE_URL).then(response => response.json()).then(json => setCards(json.cards)).catch(error => console.log(error));\n  }, []);\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, cards.map(c => React.createElement(\"li\", {\n    key: c.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, c.name)));\n}","map":{"version":3,"sources":["/Users/idastensrud/jsfw-ca/src/components/cards/list/CardList.js"],"names":["React","useState","useEffect","fetchMock","BASE_URL","mockCards","Row","Col","CardItem","CardList","cards","setCards","mock","fetch","then","response","json","catch","error","console","log","map","c","id","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA,oBACLR,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACxBS,KADwB;AAAA,QACjBC,QADiB;;AAE/BT,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,SAAS,CAACS,IAAV,CAAeR,QAAf,EAAyB;AAAEM,MAAAA,KAAK,EAAEL;AAAT,KAAzB;AAEAQ,IAAAA,KAAK,CAACT,QAAD,CAAL,CACKU,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAACN,KAAN,CAF1B,EAGKO,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAIH,GAPQ,EAON,EAPM,CAAT;AASA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,KAAK,CAACW,GAAN,CAAUC,CAAC,IACR;AAAI,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,CAAC,CAACE,IAAlB,CADH,CADL,CADJ;AAOH","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetchMock from \"fetch-mock\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport mockCards from \"../../../constants/cards\";\nimport \"./CardList.css\"\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardItem from \"./CardItem\";\n\nexport default function CardList() {\n    const [cards, setCards] = useState([]);\n    useEffect(() => {\n        fetchMock.mock(BASE_URL, { cards: mockCards });\n\n        fetch(BASE_URL)\n            .then(response => response.json())\n            .then(json => setCards(json.cards))\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <ul>\n            {cards.map(c => (\n                <li key={c.id}>{c.name}</li>\n            ))}\n        </ul>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}