{"ast":null,"code":"import _slicedToArray from \"/Users/idastensrud/jsfw-ca/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/idastensrud/jsfw-ca/src/components/cards/list/CardList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport fetchMock from \"fetch-mock\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport mockCards from \"../../../constants/cards\";\nimport \"./CardList.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardItem from \"./CardItem\";\nexport default function CardList() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        cards = _useState2[0],\n        setCards = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filteredCards = _useState4[0],\n        setFilteredCards = _useState4[1];\n\n  useEffect(() => {\n    fetchMock.mock(BASE_URL, {\n      cards: mockCards\n    });\n    fetch(BASE_URL).then(response => response.json()).then(json => {\n      setCards(json.cards);\n      setFilteredCards(json.cards);\n    }).catch(error => console.log(error));\n  }, []);\n\n  function filterThroughCards(event) {\n    const searchValue = event.target.value.toLowerCase();\n    const searchedCards = cards.filter(function (card) {\n      //\n      const lowercaseCardName = card.name.toLowerCase();\n\n      if (lowercaseCardName.startsWith(searchValue)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setFilteredCards(searchedCards);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    inline: true,\n    className: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    type: \"text\",\n    placeholder: \"Search\",\n    className: \"mr-sm-2\",\n    onChange: event => filterThroughCards(event),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, filteredCards.map(card => {\n    const id = card.id,\n          name = card.name,\n          imageUrl = card.imageUrl;\n    return React.createElement(Col, {\n      sm: 6,\n      md: 3,\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(CardItem, {\n      id: id,\n      name: name,\n      imageUrl: imageUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/idastensrud/jsfw-ca/src/components/cards/list/CardList.js"],"names":["React","useState","useEffect","fetchMock","Form","FormControl","Button","BASE_URL","mockCards","Row","Col","CardItem","CardList","cards","setCards","filteredCards","setFilteredCards","mock","fetch","then","response","json","catch","error","console","log","filterThroughCards","event","searchValue","target","value","toLowerCase","searchedCards","filter","card","lowercaseCardName","name","startsWith","map","id","imageUrl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport fetchMock from \"fetch-mock\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport mockCards from \"../../../constants/cards\";\nimport \"./CardList.css\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport CardItem from \"./CardItem\";\n\nexport default function CardList() {\n    const [cards, setCards] = useState([]);\n    const [filteredCards, setFilteredCards] = useState([]);\n\n    useEffect(() => {\n        fetchMock.mock(BASE_URL, { cards: mockCards });\n\n        fetch(BASE_URL)\n            .then(response => response.json())\n            .then(json => {\n                setCards(json.cards);\n                setFilteredCards(json.cards);\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    function filterThroughCards(event) {\n        const searchValue = event.target.value.toLowerCase();\n\n        const searchedCards = cards.filter(function(card) {\n            //\n            const lowercaseCardName = card.name.toLowerCase();\n\n            if (lowercaseCardName.startsWith(searchValue)) {\n                return true;\n            } else {\n                return false;\n            }\n        });\n\n        setFilteredCards(searchedCards);\n    }\n\n    return (\n        <>\n            <Form inline className=\"search\">\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" onChange={event => filterThroughCards(event)} />\n            </Form>\n            <Row>\n                {filteredCards.map(card => {\n                    const { id, name, imageUrl } = card;\n\n                    return (\n                        <Col sm={6} md={3} key={id}>\n                            <CardItem id={id} name={name} imageUrl={imageUrl} />\n                        </Col>\n                    );\n                })}\n            </Row>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}