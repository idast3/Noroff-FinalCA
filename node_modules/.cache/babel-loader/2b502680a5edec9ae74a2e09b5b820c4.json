{"ast":null,"code":"var _jsxFileName = \"/Users/idastensrud/jsfw-ca/src/components/cards/detail/CardDetailContainer.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport \"./CardDetail.css\";\nimport CardDetail from \"./CardDetail\";\nexport default class CardDetailContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      details: null,\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const id = this.props.match.params.id;\n    const url = \"\".concat(BASE_URL, \"/\").concat(id);\n\n    try {\n      const response = await fetch(url);\n      const json = await response.json();\n      this.setState({\n        details: json,\n        loading: false\n      });\n    } catch (error) {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          details = _this$state.details;\n\n    if (loading || !details) {\n      return React.createElement(Spinner, {\n        animation: \"border\",\n        className: \"spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(CardDetail, {\n      details: details,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}\nCardDetailContainer.propTypes = {\n  match: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/Users/idastensrud/jsfw-ca/src/components/cards/detail/CardDetailContainer.js"],"names":["React","Component","PropTypes","Spinner","BASE_URL","CardDetail","CardDetailContainer","state","details","loading","componentDidMount","id","props","match","params","url","response","fetch","json","setState","error","render","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,OAAO,kBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,eAAe,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAMvDM,KANuD,GAM/C;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAN+C;AAAA;;AAWvD,QAAMC,iBAAN,GAA0B;AAAA,UACdC,EADc,GACP,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADV,CACdH,EADc;AAEtB,UAAMI,GAAG,aAAMX,QAAN,cAAkBO,EAAlB,CAAT;;AAEA,QAAI;AACA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,YAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AAEA,WAAKC,QAAL,CAAc;AACVX,QAAAA,OAAO,EAAEU,IADC;AAEVT,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KARD,CAQE,OAAOW,KAAP,EAAc;AACZ,WAAKD,QAAL,CAAc;AACVV,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH;AACJ;;AAEDY,EAAAA,MAAM,GAAG;AAAA,wBACwB,KAAKd,KAD7B;AAAA,UACGE,OADH,eACGA,OADH;AAAA,UACYD,OADZ,eACYA,OADZ;;AAGL,QAAIC,OAAO,IAAI,CAACD,OAAhB,EAAyB;AACrB,aAAO,oBAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WAAO,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAtCsD;AAAtCF,mB,CAEZgB,S,GAAY;AACbT,EAAAA,KAAK,EAAEX,SAAS,CAACqB,MAAV,CAAiBC;AADX,C","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { BASE_URL } from \"../../../constants/API\";\nimport \"./CardDetail.css\";\nimport CardDetail from \"./CardDetail\";\n\n\nexport default class CardDetailContainer extends Component {\n\n  static propTypes = {\n        match: PropTypes.object.isRequired,\n    };\n\n    state = {\n        details: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const url = `${BASE_URL}/${id}`;\n\n        try {\n            const response = await fetch(url);\n            const json = await response.json();\n\n            this.setState({\n                details: json,\n                loading: false,\n            });\n        } catch (error) {\n            this.setState({\n                loading: false,\n            });\n        }\n    }\n\n    render() {\n        const { loading, details } = this.state;\n\n        if (loading || !details) {\n            return <Spinner animation=\"border\" className=\"spinner\" />;\n        }\n\n        return <CardDetail details={details} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}